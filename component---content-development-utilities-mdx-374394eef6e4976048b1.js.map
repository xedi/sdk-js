{"version":3,"sources":["webpack:///./node_modules/@primer/gatsby-theme-doctocat/src/components/table-of-contents.js","webpack:///./node_modules/@primer/gatsby-theme-doctocat/src/components/layout.js","webpack:///./content/development/utilities.mdx"],"names":["listStyle","TableOfContents","items","depth","as","m","p","map","item","key","url","pl","display","py","href","color","title","defaultProps","zIndex","alignItems","alignSelf","gridArea","overflow","Layout","children","pageContext","frontmatter","description","status","source","additionalContributors","flexDirection","minHeight","flex","id","maxWidth","gridTemplateColumns","gridTemplateAreas","gridColumnGap","gridRowGap","mx","border","borderBottom","borderRadius","pb","tableOfContents","position","top","HEADER_HEIGHT","maxHeight","fontWeight","mb","open","mr","pt","editUrl","contributors","concat","login","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","to","isMDXComponent"],"mappings":"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","file":"component---content-development-utilities-mdx-374394eef6e4976048b1.js","sourcesContent":["import {Box, Link} from '@primer/components'\nimport React from 'react'\n\nfunction TableOfContents({items, depth}) {\n  return (\n    <Box as=\"ul\" m={0} p={0} css={{listStyle: 'none'}}>\n      {items.map(item => (\n        <Box as=\"li\" key={item.url} pl={depth > 0 ? 3 : 0}>\n          <Link display=\"inline-block\" py={1} href={item.url} color=\"gray.6\">\n            {item.title}\n          </Link>\n          {item.items ? (\n            <TableOfContents items={item.items} depth={depth + 1} />\n          ) : null}\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nTableOfContents.defaultProps = {\n  depth: 0,\n}\n\nexport default TableOfContents\n","import {\n  BorderBox,\n  Box,\n  Details,\n  Flex,\n  Grid,\n  Heading,\n  Position,\n  Text,\n} from '@primer/components'\nimport {ChevronDownIcon, ChevronRightIcon} from '@primer/styled-octicons'\nimport React from 'react'\nimport Head from './head'\nimport Header, {HEADER_HEIGHT} from './header'\nimport PageFooter from './page-footer'\nimport Sidebar from './sidebar'\nimport SourceLink from './source-link'\nimport StatusLabel from './status-label'\nimport TableOfContents from './table-of-contents'\n\nfunction Layout({children, pageContext}) {\n  const {\n    title,\n    description,\n    status,\n    source,\n    additionalContributors = [],\n  } = pageContext.frontmatter\n\n  return (\n    <Flex flexDirection=\"column\" minHeight=\"100vh\">\n      <Head title={title} description={description} />\n      <Header />\n      <Flex flex=\"1 1 auto\" flexDirection=\"row\" css={{zIndex: 0}}>\n        <Box display={['none', null, null, 'block']}>\n          <Sidebar />\n        </Box>\n        <Grid\n          id=\"skip-nav\"\n          maxWidth=\"100%\"\n          gridTemplateColumns={['100%', null, 'minmax(0, 65ch) 220px']}\n          gridTemplateAreas={[\n            '\"heading\" \"content\"',\n            null,\n            '\"heading .\" \"content table-of-contents\"',\n          ]}\n          gridColumnGap={[null, null, 6, 7]}\n          gridRowGap={3}\n          mx=\"auto\"\n          p={[5, 6, null, 7]}\n          css={{alignItems: 'start', alignSelf: 'start'}}\n        >\n          <BorderBox\n            css={{gridArea: 'heading'}}\n            border={0}\n            borderBottom={1}\n            borderRadius={0}\n            pb={2}\n          >\n            <Heading>{title}</Heading>\n          </BorderBox>\n          {pageContext.tableOfContents.items ? (\n            <Position\n              display={['none', null, 'block']}\n              css={{gridArea: 'table-of-contents', overflow: 'auto'}}\n              position=\"sticky\"\n              top={HEADER_HEIGHT + 24}\n              maxHeight={`calc(100vh - ${HEADER_HEIGHT}px - 24px)`}\n            >\n              <Text display=\"inline-block\" fontWeight=\"bold\" mb={1}>\n                Table of contents\n              </Text>\n              <TableOfContents items={pageContext.tableOfContents.items} />\n            </Position>\n          ) : null}\n          <Box css={{gridArea: 'content'}}>\n            {status || source ? (\n              <Flex mb={3} alignItems=\"center\">\n                {status ? <StatusLabel status={status} /> : null}\n                <Box mx=\"auto\" />\n                {source ? <SourceLink href={source} /> : null}\n              </Flex>\n            ) : null}\n            {pageContext.tableOfContents.items ? (\n              <Box display={['block', null, 'none']} mb={3}>\n                <Details>\n                  {({open}) => (\n                    <>\n                      <Text as=\"summary\" fontWeight=\"bold\">\n                        {open ? (\n                          <ChevronDownIcon mr={2} />\n                        ) : (\n                          <ChevronRightIcon mr={2} />\n                        )}\n                        Table of contents\n                      </Text>\n                      <Box pt={1}>\n                        <TableOfContents\n                          items={pageContext.tableOfContents.items}\n                        />\n                      </Box>\n                    </>\n                  )}\n                </Details>\n              </Box>\n            ) : null}\n            {children}\n            <PageFooter\n              editUrl={pageContext.editUrl}\n              contributors={pageContext.contributors.concat(\n                additionalContributors.map((login) => ({login})),\n              )}\n            />\n          </Box>\n        </Grid>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Layout\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/midders/Code/xedi-microservices/sdk-js/docs/node_modules/@primer/gatsby-theme-doctocat/src/components/layout.js\";\nimport { Text } from '@primer/components';\nimport { CodeIcon } from '@primer/styled-octicons';\nimport { Caption } from '@primer/gatsby-theme-doctocat';\nimport { ExternalLink } from '../../src/components';\nimport { Link } from 'gatsby';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`The `}<ExternalLink href=\"https://github.com/xedi/sdk-js/tree/master/src/Utils\" mdxType=\"ExternalLink\"><inlineCode parentName=\"p\">{`Utils`}</inlineCode></ExternalLink>{` directory contains a number of classes which provide help functionality or features when developing aspects of the SDK.`}</p>\n    <h2>{`AuthenticateHeaderParser`}</h2>\n    <p>{`As part of our `}<Link to=\"/architecture/authentication\" mdxType=\"Link\">{`authentication flow`}</Link>{` the `}<ExternalLink href=\"https://tools.ietf.org/html/rfc6750#page-9\" mdxType=\"ExternalLink\"><inlineCode parentName=\"p\">{`WWW-Authenticate`}</inlineCode>{` header`}</ExternalLink>{` is returned from the API Gateway. This is provided to us as a single string which makes it difficult to parse.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Bearer realm=\"api.xedi\",\n    error=\"invalid_token\",\n    error_description=\"The access token expired\"\n`}</code></pre>\n    <Caption mdxType=\"Caption\">Example WWW-Authenticate header</Caption>\n    <Text as=\"p\" mb={3} mdxType=\"Text\">To simplify the logic of interogating this string, the `AuthenticateHeaderParser` was devised.</Text>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const authenticateHeader = AuthenticateHeaderParser.parse(\n    headers['www-authenticate']\n);\n\nauthenticateHeader.realm; // \"api.xedi\"\n\nauthenticateHeader.error; // \"invalid_token\"\n\nauthenticateHeader.error_description; // \"The access token expired\"\n`}</code></pre>\n    <ExternalLink href=\"https://github.com/xedi/sdk-js/blob/master/src/Utils/AuthenticateHeaderParser.ts\" mdxType=\"ExternalLink\"><CodeIcon mr={1} mdxType=\"CodeIcon\" />View source</ExternalLink>\n    <h2>{`XUID`}</h2>\n    <p>{`Identifing Entities without explicit type attributes across an eco-system like XEDI is problematic at best, impossible in the main. At XEDI, we found the answer by introducing an identifier that could be typed. `}<ExternalLink href=\"https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_1_(date-time_and_MAC_address)\" mdxType=\"ExternalLink\">{`Version 1 UUIDs`}</ExternalLink>{` are considered inherently insecure due to the use of the issuing computers MAC address as the \"node\" component. We seized this vulnerability and turned it on its head by replacing the node of a UUIDv1 with our own series of hashes. Each hash is tied to an identifier which a service can use to determine what a generic entity is.`}</p>\n    <ExternalLink href=\"https://github.com/xedi/sdk-js/blob/master/src/Utils/Xuid.ts\" mdxType=\"ExternalLink\"><CodeIcon mr={1} mdxType=\"CodeIcon\" />View source</ExternalLink>\n    <h2>{`Supported XUIDs`}</h2>\n    <p>{`As above, at XEDI we utilitize a series of known hashes to identify anonymized json objects as certain entities. In TypeScript, we represent these as an Enum known as SupportedXuid. Because this has little to no practical runtime use, we don't include the associated hashes with the inclusion of a supported type.`}</p>\n    <ExternalLink href=\"https://github.com/xedi/sdk-js/blob/master/src/Utils/Xuid.ts\" mdxType=\"ExternalLink\"><CodeIcon mr={1} mdxType=\"CodeIcon\" />View source</ExternalLink>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}