{"version":3,"sources":["webpack:///./node_modules/@primer/gatsby-theme-doctocat/src/components/table-of-contents.js","webpack:///./node_modules/@primer/gatsby-theme-doctocat/src/components/layout.js","webpack:///./content/development/api.mdx"],"names":["listStyle","TableOfContents","items","depth","as","m","p","map","item","key","url","pl","display","py","href","color","title","defaultProps","zIndex","alignItems","alignSelf","gridArea","overflow","Layout","children","pageContext","frontmatter","description","status","source","additionalContributors","flexDirection","minHeight","flex","id","maxWidth","gridTemplateColumns","gridTemplateAreas","gridColumnGap","gridRowGap","mx","border","borderBottom","borderRadius","pb","tableOfContents","position","top","HEADER_HEIGHT","maxHeight","fontWeight","mb","open","mr","pt","editUrl","contributors","concat","login","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","issueId","to","varient","isMDXComponent"],"mappings":"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","file":"component---content-development-api-mdx-e8a48ca1c20ca63518c0.js","sourcesContent":["import {Box, Link} from '@primer/components'\nimport React from 'react'\n\nfunction TableOfContents({items, depth}) {\n  return (\n    <Box as=\"ul\" m={0} p={0} css={{listStyle: 'none'}}>\n      {items.map(item => (\n        <Box as=\"li\" key={item.url} pl={depth > 0 ? 3 : 0}>\n          <Link display=\"inline-block\" py={1} href={item.url} color=\"gray.6\">\n            {item.title}\n          </Link>\n          {item.items ? (\n            <TableOfContents items={item.items} depth={depth + 1} />\n          ) : null}\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nTableOfContents.defaultProps = {\n  depth: 0,\n}\n\nexport default TableOfContents\n","import {\n  BorderBox,\n  Box,\n  Details,\n  Flex,\n  Grid,\n  Heading,\n  Position,\n  Text,\n} from '@primer/components'\nimport {ChevronDownIcon, ChevronRightIcon} from '@primer/styled-octicons'\nimport React from 'react'\nimport Head from './head'\nimport Header, {HEADER_HEIGHT} from './header'\nimport PageFooter from './page-footer'\nimport Sidebar from './sidebar'\nimport SourceLink from './source-link'\nimport StatusLabel from './status-label'\nimport TableOfContents from './table-of-contents'\n\nfunction Layout({children, pageContext}) {\n  const {\n    title,\n    description,\n    status,\n    source,\n    additionalContributors = [],\n  } = pageContext.frontmatter\n\n  return (\n    <Flex flexDirection=\"column\" minHeight=\"100vh\">\n      <Head title={title} description={description} />\n      <Header />\n      <Flex flex=\"1 1 auto\" flexDirection=\"row\" css={{zIndex: 0}}>\n        <Box display={['none', null, null, 'block']}>\n          <Sidebar />\n        </Box>\n        <Grid\n          id=\"skip-nav\"\n          maxWidth=\"100%\"\n          gridTemplateColumns={['100%', null, 'minmax(0, 65ch) 220px']}\n          gridTemplateAreas={[\n            '\"heading\" \"content\"',\n            null,\n            '\"heading .\" \"content table-of-contents\"',\n          ]}\n          gridColumnGap={[null, null, 6, 7]}\n          gridRowGap={3}\n          mx=\"auto\"\n          p={[5, 6, null, 7]}\n          css={{alignItems: 'start', alignSelf: 'start'}}\n        >\n          <BorderBox\n            css={{gridArea: 'heading'}}\n            border={0}\n            borderBottom={1}\n            borderRadius={0}\n            pb={2}\n          >\n            <Heading>{title}</Heading>\n          </BorderBox>\n          {pageContext.tableOfContents.items ? (\n            <Position\n              display={['none', null, 'block']}\n              css={{gridArea: 'table-of-contents', overflow: 'auto'}}\n              position=\"sticky\"\n              top={HEADER_HEIGHT + 24}\n              maxHeight={`calc(100vh - ${HEADER_HEIGHT}px - 24px)`}\n            >\n              <Text display=\"inline-block\" fontWeight=\"bold\" mb={1}>\n                Table of contents\n              </Text>\n              <TableOfContents items={pageContext.tableOfContents.items} />\n            </Position>\n          ) : null}\n          <Box css={{gridArea: 'content'}}>\n            {status || source ? (\n              <Flex mb={3} alignItems=\"center\">\n                {status ? <StatusLabel status={status} /> : null}\n                <Box mx=\"auto\" />\n                {source ? <SourceLink href={source} /> : null}\n              </Flex>\n            ) : null}\n            {pageContext.tableOfContents.items ? (\n              <Box display={['block', null, 'none']} mb={3}>\n                <Details>\n                  {({open}) => (\n                    <>\n                      <Text as=\"summary\" fontWeight=\"bold\">\n                        {open ? (\n                          <ChevronDownIcon mr={2} />\n                        ) : (\n                          <ChevronRightIcon mr={2} />\n                        )}\n                        Table of contents\n                      </Text>\n                      <Box pt={1}>\n                        <TableOfContents\n                          items={pageContext.tableOfContents.items}\n                        />\n                      </Box>\n                    </>\n                  )}\n                </Details>\n              </Box>\n            ) : null}\n            {children}\n            <PageFooter\n              editUrl={pageContext.editUrl}\n              contributors={pageContext.contributors.concat(\n                additionalContributors.map((login) => ({login})),\n              )}\n            />\n          </Box>\n        </Grid>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Layout\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/adam/Code/Xedi/sdk/js/docs/node_modules/@primer/gatsby-theme-doctocat/src/components/layout.js\";\nimport { Flash, Text, BorderBox } from '@primer/components';\nimport { Caption, Container } from '@primer/gatsby-theme-doctocat';\nimport { InfoIcon } from '@primer/styled-octicons';\nimport InlineCode from '@primer/gatsby-theme-doctocat/src/components/inline-code';\nimport { GithubIssue } from '../../src/components';\nimport { Link } from 'gatsby';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`Adding API Classes`}</h1>\n    <p>{`There are three main stages to adding an API class:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Definition`}</li>\n      <li parentName=\"ol\">{`Resolution`}</li>\n      <li parentName=\"ol\">{`Invocation`}</li>\n    </ol>\n    <h2>{`Definition`}</h2>\n    <p>{`Within the `}<inlineCode parentName=\"p\">{`src/Services/`}</inlineCode>{` directory you should find a number of files. Most notable for us is the `}<inlineCode parentName=\"p\">{`Service.ts`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Services.ts`}</inlineCode>{` files.`}</p>\n    <BorderBox mb={2} mdxType=\"BorderBox\">\n    <GithubIssue issueId=\"24\" mdxType=\"GithubIssue\" />\n    </BorderBox>\n    <p><inlineCode parentName=\"p\">{`Service.ts`}</inlineCode>{` is the abstract class from which all our \"Service\" classes extend. It is responsible for the construction of the class, for handling the `}<Link to=\"architecture/events\" mdxType=\"Link\">{`classes events`}</Link>{`, and holding memory references to the `}<Link to=\"architecture/configuration\" mdxType=\"Link\">{`config bag`}</Link>{` and the `}<Link to=\"architecture/http_requests\" mdxType=\"Link\">{`HTTP client`}</Link>{`.`}</p>\n    <p>{`Within `}<inlineCode parentName=\"p\">{`src/Services`}</inlineCode>{` create a new file with the same name as the entity it will host. For example, `}<inlineCode parentName=\"p\">{`Example.ts`}</inlineCode>{` should look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import Service from  './Service';\n\n\n/**\n * Example class\n */\nclass Example extends Service\n{\n}\n\nexport default Example;\n`}</code></pre>\n    <h2>{`Resolution`}</h2>\n    <p>{`Remember `}<inlineCode parentName=\"p\">{`src/Services/Services.ts`}</inlineCode>{`? This is the first step of building the resolution root for our new class.\n`}<inlineCode parentName=\"p\">{`Services.ts`}</inlineCode>{` exports a TypeScript namespace, which allows use to easily import all our \"Services\" into our main class.`}</p>\n    <p>{`Firstly, import your newly created \"Service\" class.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`diff a/src/Services/Services.ts b/src/Services/Services.ts\n import Accounts from './Accounts';\n+import Example from './Example';\n`}</code></pre>\n    <p>{`Then, you should add the imported class to the end of the `}<inlineCode parentName=\"p\">{`export`}</inlineCode>{` object.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`diff a/src/Services/Services.ts b/src/Services/Services.ts\n     Accounts,\n-}\n+    Example,\n+}\n`}</code></pre>\n    <p>{`Next, you need to register your `}<Link to=\"architecture/singletons\" mdxType=\"Link\">{`singleton`}</Link>{`. This will ensure configuration and state persistence.`}</p>\n    <h2>{`Invocation`}</h2>\n    <p>{`This is where things start to come together. Locate `}<inlineCode parentName=\"p\">{`src/index.ts`}</inlineCode>{` and open it. Inside here, you will find our root object. It is the home of our application container.`}</p>\n    <p>{`The first step here is to register a `}<Link to=\"architecture/singletons\" mdxType=\"Link\">{`singleton`}</Link>{` for your \"Service\" class.\nFind the `}<inlineCode parentName=\"p\">{`boot`}</inlineCode>{` method, and go to the bottom of that method. Here we are going to add a binding that the container will use to build a single instance of your class.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`this.singleton(\n    'services.example',\n    (app: ContainerInterface, config: Config) => {\n        return new Services.Example(\n            config,\n            app.resolve('client')\n        );\n    }\n);\n`}</code></pre>\n    <p>{`The counterpart to this registration is the resolution of its abstract definition; here `}<inlineCode parentName=\"p\">{`'services.example'`}</inlineCode>{`.`}</p>\n    <p>{`Near the bottom of the root `}<inlineCode parentName=\"p\">{`Xedi`}</inlineCode>{` class, add the following function.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`static get Example(): Services.Example\n{\n    return this.resolveInstance()\n        .resolve('services.example');\n}\n\n`}</code></pre>\n    <p>{`Congratulations! You can now resolve you new class. If you want, go ahead and jump into the `}<Link to=\"tooling/debugging\" mdxType=\"Link\">{`playground`}</Link>{` and type `}<inlineCode parentName=\"p\">{`Xedi.Example`}</inlineCode>{`. It should resolve you an instance of your new class and inside, you will find a `}<Link to=\"architecture/config\" mdxType=\"Link\">{`config bag`}</Link>{` and a `}<Link to=\"architecture/http_requests\" mdxType=\"Link\">{`HTTP client`}</Link>{`.`}</p>\n    <h1>{`Modifying API Classes`}</h1>\n    <p>{`You want to start giving your class some abilities. Depending on your situation you might be adding a series of CRUD endpoints, or something entirely different. In most cases, you will be sending HTTP requests to an instance of the XEDI API Gateway. Most endpoints are the same, but there will be a few caveats and edge-cases. Consider the following examples:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`list() {\n    return this.client\n        .get<JsonResponse<Example>>(\\`1/examples\\`)\n        .then((response: AxiosResponse<JsonResponse<Example>>) => {\n            return response.data.data;\n        });\n}\n`}</code></pre>\n    <Caption mdxType=\"Caption\">An indexing method</Caption>\n    <p>{`Lets look at line three of the above example. In JavaScript this would look like `}<InlineCode mdxType=\"InlineCode\">{`.get('1/examples')`}</InlineCode>{`, so whats the extra stuff? This how we tell TypeScript, what we expect the `}<Link to=\"architecture/http_requests\" mdxType=\"Link\">{`HTTP Client`}</Link>{` to return in the promise. Here we tell it we want a `}<inlineCode parentName=\"p\">{`JsonResponse`}</inlineCode>{` which itself, must contain an `}<inlineCode parentName=\"p\">{`Example`}</inlineCode>{`.`}</p>\n    <Flash varient=\"info\" mb={2} mdxType=\"Flash\">\n      <Text fontWeight=\"bold\" mdxType=\"Text\"><InfoIcon mdxType=\"InfoIcon\" /> What is an <InlineCode mdxType=\"InlineCode\">Example</InlineCode>?</Text>\n      <p>{`In this instance, Example is a `}<Link to=\"development/models\" mdxType=\"Link\">{`model`}</Link>{`. A model is a simple definition of the data structure we expect. If you aren't familiar with this concept, read the section on `}<Link to=\"development/models\" mdxType=\"Link\">{`models`}</Link>{`.`}</p>\n    </Flash>\n    <p>{`On line four, we see that our response expectation is defined again, but this time within an `}<Link to=\"architecture/http_requests\" mdxType=\"Link\"><InlineCode mdxType=\"InlineCode\">{`AxiosResponse`}</InlineCode></Link>{`. Translated to plain english this reads: `}<Text as=\"em\" mdxType=\"Text\">{`Where `}<InlineCode mdxType=\"InlineCode\">{`response`}</InlineCode>{` is a JSON representation of a Example within an AxiosResponse`}</Text>{`. Again, at runtime, this compiles down to nothing, but here in TypeScript it helps us understand the intent of the code.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}