{"version":3,"sources":["webpack:///./node_modules/@primer/gatsby-theme-doctocat/src/components/table-of-contents.js","webpack:///./node_modules/@primer/gatsby-theme-doctocat/src/components/layout.js","webpack:///./content/documentation/recipes/adding-a-page.mdx"],"names":["listStyle","TableOfContents","items","depth","as","m","p","map","item","key","url","pl","display","py","href","color","title","defaultProps","zIndex","alignItems","alignSelf","gridArea","overflow","Layout","children","pageContext","frontmatter","description","status","source","additionalContributors","flexDirection","minHeight","flex","id","maxWidth","gridTemplateColumns","gridTemplateAreas","gridColumnGap","gridRowGap","mx","border","borderBottom","borderRadius","pb","tableOfContents","position","top","HEADER_HEIGHT","maxHeight","fontWeight","mb","open","mr","pt","editUrl","contributors","concat","login","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","to","stacked","isMDXComponent"],"mappings":"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","file":"component---content-documentation-recipes-adding-a-page-mdx-a2d2fae520cbd03f43ac.js","sourcesContent":["import {Box, Link} from '@primer/components'\nimport React from 'react'\n\nfunction TableOfContents({items, depth}) {\n  return (\n    <Box as=\"ul\" m={0} p={0} css={{listStyle: 'none'}}>\n      {items.map(item => (\n        <Box as=\"li\" key={item.url} pl={depth > 0 ? 3 : 0}>\n          <Link display=\"inline-block\" py={1} href={item.url} color=\"gray.6\">\n            {item.title}\n          </Link>\n          {item.items ? (\n            <TableOfContents items={item.items} depth={depth + 1} />\n          ) : null}\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nTableOfContents.defaultProps = {\n  depth: 0,\n}\n\nexport default TableOfContents\n","import {\n  BorderBox,\n  Box,\n  Details,\n  Flex,\n  Grid,\n  Heading,\n  Position,\n  Text,\n} from '@primer/components'\nimport {ChevronDownIcon, ChevronRightIcon} from '@primer/styled-octicons'\nimport React from 'react'\nimport Head from './head'\nimport Header, {HEADER_HEIGHT} from './header'\nimport PageFooter from './page-footer'\nimport Sidebar from './sidebar'\nimport SourceLink from './source-link'\nimport StatusLabel from './status-label'\nimport TableOfContents from './table-of-contents'\n\nfunction Layout({children, pageContext}) {\n  const {\n    title,\n    description,\n    status,\n    source,\n    additionalContributors = [],\n  } = pageContext.frontmatter\n\n  return (\n    <Flex flexDirection=\"column\" minHeight=\"100vh\">\n      <Head title={title} description={description} />\n      <Header />\n      <Flex flex=\"1 1 auto\" flexDirection=\"row\" css={{zIndex: 0}}>\n        <Box display={['none', null, null, 'block']}>\n          <Sidebar />\n        </Box>\n        <Grid\n          id=\"skip-nav\"\n          maxWidth=\"100%\"\n          gridTemplateColumns={['100%', null, 'minmax(0, 65ch) 220px']}\n          gridTemplateAreas={[\n            '\"heading\" \"content\"',\n            null,\n            '\"heading .\" \"content table-of-contents\"',\n          ]}\n          gridColumnGap={[null, null, 6, 7]}\n          gridRowGap={3}\n          mx=\"auto\"\n          p={[5, 6, null, 7]}\n          css={{alignItems: 'start', alignSelf: 'start'}}\n        >\n          <BorderBox\n            css={{gridArea: 'heading'}}\n            border={0}\n            borderBottom={1}\n            borderRadius={0}\n            pb={2}\n          >\n            <Heading>{title}</Heading>\n          </BorderBox>\n          {pageContext.tableOfContents.items ? (\n            <Position\n              display={['none', null, 'block']}\n              css={{gridArea: 'table-of-contents', overflow: 'auto'}}\n              position=\"sticky\"\n              top={HEADER_HEIGHT + 24}\n              maxHeight={`calc(100vh - ${HEADER_HEIGHT}px - 24px)`}\n            >\n              <Text display=\"inline-block\" fontWeight=\"bold\" mb={1}>\n                Table of contents\n              </Text>\n              <TableOfContents items={pageContext.tableOfContents.items} />\n            </Position>\n          ) : null}\n          <Box css={{gridArea: 'content'}}>\n            {status || source ? (\n              <Flex mb={3} alignItems=\"center\">\n                {status ? <StatusLabel status={status} /> : null}\n                <Box mx=\"auto\" />\n                {source ? <SourceLink href={source} /> : null}\n              </Flex>\n            ) : null}\n            {pageContext.tableOfContents.items ? (\n              <Box display={['block', null, 'none']} mb={3}>\n                <Details>\n                  {({open}) => (\n                    <>\n                      <Text as=\"summary\" fontWeight=\"bold\">\n                        {open ? (\n                          <ChevronDownIcon mr={2} />\n                        ) : (\n                          <ChevronRightIcon mr={2} />\n                        )}\n                        Table of contents\n                      </Text>\n                      <Box pt={1}>\n                        <TableOfContents\n                          items={pageContext.tableOfContents.items}\n                        />\n                      </Box>\n                    </>\n                  )}\n                </Details>\n              </Box>\n            ) : null}\n            {children}\n            <PageFooter\n              editUrl={pageContext.editUrl}\n              contributors={pageContext.contributors.concat(\n                additionalContributors.map((login) => ({login})),\n              )}\n            />\n          </Box>\n        </Grid>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Layout\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/midders/Code/xedi-microservices/sdk-js/docs/node_modules/@primer/gatsby-theme-doctocat/src/components/layout.js\";\nimport { Flash } from '@primer/components';\nimport { ExternalLink } from '../../../src/components';\nimport { Caption, DoDontContainer, Do, Dont } from '@primer/gatsby-theme-doctocat';\nimport { InfoIcon } from '@primer/styled-octicons';\nimport InlineCode from '@primer/gatsby-theme-doctocat/src/components/inline-code';\nimport { Link } from 'gatsby';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2>{`Step 1 - Create a page`}</h2>\n    <p>{`Within the `}<inlineCode parentName=\"p\">{`docs/content`}</inlineCode>{` directory is where all the pages are stored. From `}<inlineCode parentName=\"p\">{`docs/content/`}</inlineCode>{` the folder structure should match the desired URL. For this particular page, a recipe for adding pages, I wanted the URL to be something like `}<inlineCode parentName=\"p\">{`documentation/recipes/adding-a-page`}</inlineCode>{`. This meant I would need to add a directory with `}<inlineCode parentName=\"p\">{`docs/content/documentation`}</inlineCode>{` called recipes.`}</p>\n    <h2>{`Step 2 - Front matter`}</h2>\n    <p><strong parentName=\"p\">{`Front Matter`}</strong>{` is information about the page you are authoring. There are four \"variables\" that are supported.`}</p>\n    <h3>{`Title and description`}</h3>\n    <p><inlineCode parentName=\"p\">{`title`}</inlineCode>{` is used to render the page heading and generate the `}<ExternalLink href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title\" mdxType=\"ExternalLink\">{`page title`}</ExternalLink>{`.`}</p>\n    <p><inlineCode parentName=\"p\">{`description`}</inlineCode>{` is used to create a `}<ExternalLink href=\"https://moz.com/learn/seo/meta-description\" mdxType=\"ExternalLink\">{`meta description tag`}</ExternalLink>{`\nwhich is important for SEO. `}<strong parentName=\"p\">{`These are required on every page`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-mdx\"\n      }}>{`---\ntitle: Adding a Page\ndescription: Adding Documentation\n---\n`}</code></pre>\n    <h3>{`Status`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`status`}</inlineCode>{` variable is provided by the `}<ExternalLink href=\"https://primer.style/doctocat/usage/front-matter#status\" mdxType=\"ExternalLink\">{`doctocat theme`}</ExternalLink>{` and provides a label at the top of the page indicating the status of your subject.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-mdx\"\n      }}>{`---\nstatus: New\n---\n`}</code></pre>\n    <h3>{`Source`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`source`}</inlineCode>{` variable is provided by the `}<ExternalLink href=\"https://primer.style/doctocat/usage/front-matter#status\" mdxType=\"ExternalLink\">{`doctocat theme`}</ExternalLink>{` and provides a link at the top of the page back to the source code of your subject.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-mdx\"\n      }}>{`---\nsource: https://github.com/xedi/sdk-js/blob/master/docs/content/documentation/recipes/adding-a-page.mdx\n---\n`}</code></pre>\n    <h3>{`Additional contributors`}</h3>\n    <p>{`At the bottom of each page is a list of people who have contributed to that page. From time to time, you may find yourself needing to use code or content from other authors. For example, you may choose to use fixtures written by another developer. In this situation, it's nice to recognise those contributions. You can do this by adding the `}<inlineCode parentName=\"p\">{`additionalContributors`}</inlineCode>{` variable.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-mdx\"\n      }}>{`---\nadditionalContributors:\n  - midmiddlton\n  - ehtishamSaleem\n---\n`}</code></pre>\n    <h2>{`Step 3 - Adding to the nav`}</h2>\n    <p>{`If you want your page to appear within the sites navigation, you will need to place an entry within the `}<inlineCode parentName=\"p\">{`nav.yml`}</inlineCode>{` file thats in `}<inlineCode parentName=\"p\">{`docs/src/@primer/gatsby-theme-doctocat/`}</inlineCode>{`.`}</p>\n    <p>{`Inside the file, find the where you want your page to appear in the listing (the nav is rendered in the order defined). You `}<strong parentName=\"p\">{`should`}</strong>{` provide a `}<inlineCode parentName=\"p\">{`title`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`url`}</inlineCode>{`. If you are defining a new section, then you should also provide a list of `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yml\"\n      }}>{`- title: Recipe - Adding a Page\n  url: documentation/recipes/adding-a-page\n`}</code></pre>\n    <Caption mdxType=\"Caption\">Adding a page</Caption>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yml\"\n      }}>{`- title: Recipes\n  url: documentation/recipes\n  children:\n    - title: Recipe - Adding a Page\n      url: documentation/recipes/adding-a-page\n`}</code></pre>\n    <Caption mdxType=\"Caption\">Adding a new section</Caption>\n    <Flash mdxType=\"Flash\">\n      <InfoIcon mr={1} mdxType=\"InfoIcon\" />When defining a new section there are a couple of caveats to be aware of, and these are covered in the <Link to=\"/documentation/structure#sidebar-navigation\" mdxType=\"Link\">section about the Sidebar</Link>.\n    </Flash>\n    <h2>{`Step 4 - Authoring`}</h2>\n    <p>{`Depending what you are writing about, how you write about it and the components you will use will differ.`}</p>\n    <p>{`API documentation is relatively simplistic compared to technical documentation. Here are some general guidelines.`}</p>\n    <DoDontContainer stacked mdxType=\"DoDontContainer\">\n    <Do mdxType=\"Do\">Complete front-matter as completely as is necessary.</Do>\n    <Do mdxType=\"Do\">Document all issues and workarounds.</Do>\n    <Do mdxType=\"Do\">Provide links to all issues use the <InlineCode mdxType=\"InlineCode\">&lt;GithubIssue&gt;</InlineCode> component.</Do>\n    <Dont mdxType=\"Dont\">Put sensitive information like keys, access tokens or passwords into documentation.</Dont>\n    <Do mdxType=\"Do\">Use the <InlineCode mdxType=\"InlineCode\">&lt;Flash&gt;</InlineCode> component to emphasis important sections.</Do>\n    </DoDontContainer>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}